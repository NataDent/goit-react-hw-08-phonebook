{"version":3,"file":"static/js/650.adbd5975.chunk.js","mappings":"mUAmCaA,GAAOC,EAAAA,EAAAA,IAA2B,SAAcC,EAAOC,GAClE,IAAMC,GAASC,EAAAA,EAAAA,IAAe,OAAQH,GACtCI,GACEC,EAAAA,EAAAA,IAAiBL,GAD8BM,GAAzCF,EAAAG,UAAWH,EAAAI,MAAOJ,EAAAK,WAAYL,EAAAM,QAAWC,EAAAA,EAAAA,GAAAP,EAAAQ,IAG3CC,ECvCR,SAAiBC,GACf,IAAMC,EAAQC,OAAOC,OAAO,CAAC,EAAGH,GAChC,IAAK,IAAII,KAAOH,OACK,IAAfA,EAAMG,WACDH,EAAMG,GAEjB,OAAOH,CACT,CDgCuBI,CAAQ,CAC3BC,UAAWpB,EAAMQ,MACjBa,eAAgBrB,EAAMS,WACtBa,cAAetB,EAAMU,SAGvB,OACEa,EAAAA,EAAAA,KAACC,EAAAA,EAAAA,GAAOC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACNxB,IAAAA,EACAM,WAAWmB,EAAAA,EAAAA,IAAG,cAAe1B,EAAMO,YAC/BM,GACAP,GAAA,IACJqB,MAAOzB,IAGb,IAEAJ,EAAK8B,YAAc,OEtDnB,IAaA,EAba,WACX,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,QAAQ,OAAOC,eAAe,SAASC,WAAW,SAAQC,UACnEC,EAAAA,EAAAA,MAACrC,EAAI,CAACsC,SAAS,MAAMC,MAAM,YAAYjB,UAAU,SAAQc,SAAA,CAAC,2CACf,KACzCL,EAAAA,EAAAA,KAAA,QAAMS,KAAK,MAAM,aAAW,gBAAeJ,SAAC,+DAMpD,C","sources":["../node_modules/@chakra-ui/layout/src/text.tsx","../node_modules/@chakra-ui/object-utils/dist/chunk-R3DH46PF.mjs","pages/Home/Home.js"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  SystemProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\nimport { compact } from \"@chakra-ui/object-utils\"\n\nexport interface TextProps extends HTMLChakraProps<\"p\">, ThemingProps<\"Text\"> {\n  /**\n   * The CSS `text-align` property\n   * @type SystemProps[\"textAlign\"]\n   */\n  align?: SystemProps[\"textAlign\"]\n  /**\n   * The CSS `text-decoration` property\n   * @type SystemProps[\"textDecoration\"]\n   */\n  decoration?: SystemProps[\"textDecoration\"]\n  /**\n   * The CSS `text-transform` property\n   * @type SystemProps[\"textTransform\"]\n   */\n  casing?: SystemProps[\"textTransform\"]\n}\n\n/**\n * Used to render texts or paragraphs.\n *\n * @see Docs https://chakra-ui.com/text\n */\nexport const Text = forwardRef<TextProps, \"p\">(function Text(props, ref) {\n  const styles = useStyleConfig(\"Text\", props)\n  const { className, align, decoration, casing, ...rest } =\n    omitThemingProps(props)\n\n  const aliasedProps = compact({\n    textAlign: props.align,\n    textDecoration: props.decoration,\n    textTransform: props.casing,\n  })\n\n  return (\n    <chakra.p\n      ref={ref}\n      className={cx(\"chakra-text\", props.className)}\n      {...aliasedProps}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nText.displayName = \"Text\"\n","// src/compact.ts\nfunction compact(object) {\n  const clone = Object.assign({}, object);\n  for (let key in clone) {\n    if (clone[key] === void 0)\n      delete clone[key];\n  }\n  return clone;\n}\n\nexport {\n  compact\n};\n","import { Container } from '@chakra-ui/react';\nimport { Text } from '@chakra-ui/react';\n\nconst Home = () => {\n  return (\n    <Container display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n      <Text fontSize=\"5xl\" color=\"brand.600\" textAlign=\"center\">\n        Hello! Here you can store your contacts!{' '}\n        <span role=\"img\" aria-label=\"Greeting icon\">\n          üßè‚Äç‚ôÄÔ∏èüìãüñç\n        </span>\n      </Text>\n    </Container>\n  );\n};\n\nexport default Home;\n"],"names":["Text","forwardRef","props","ref","styles","useStyleConfig","_omitThemingProps","omitThemingProps","rest","className","align","decoration","casing","_objectWithoutProperties","_excluded","aliasedProps","object","clone","Object","assign","key","compact","textAlign","textDecoration","textTransform","jsx","chakra","_objectSpread","cx","__css","displayName","_jsx","Container","display","justifyContent","alignItems","children","_jsxs","fontSize","color","role"],"sourceRoot":""}