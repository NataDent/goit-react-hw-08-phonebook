{"version":3,"file":"static/js/540.2b7c57dd.chunk.js","mappings":"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","sources":["components/Section/Section.styled.jsx","components/Section/Section.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.js","redux/contacts/selectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SectionWrapper = styled.section`\n  max-width: 370px;\n  margin: 0 auto;\n  margin: 32px auto;\n  border: 1px solid lightgrey;\n  border-radius: 8px;\n  padding: 20px;\n  background-color: rgba(255, 99, 71, 0.1);\n`;\n\nexport const SectionTitle = styled.h2`\n  font-size: 30px;\n  font-weight: 700;\n`;\n","import { SectionTitle, SectionWrapper } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionWrapper>\n      <SectionTitle>{title}</SectionTitle>\n      {children}\n    </SectionWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactListStyled = styled.ul`\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n  background-color: #fff;\n`;\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  padding: 4px;\n`;\nexport const Button = styled.button`\n  margin-top: 8px;\n  padding: 4px;\n  background-color: #fff;\n  border-radius: 8px;\n  border: 1px solid darkgrey;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: rgba(100, 100, 111, 0.2) 0px 7px 29px 0px;\n    transform: scale(1.05);\n    background-color: #ff99ff;\n  }\n`;\n","import { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { Button, ContactListStyled, ListItem } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  const handleDelete = id => dispatch(deleteContact(id));\n\n  return (\n    <ContactListStyled>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ListItem key={id}>\n          <p>\n            {name}: {number}\n          </p>\n          <Button type=\"button\" onClick={() => handleDelete(id)}>\n            Delete\n          </Button>\n        </ListItem>\n      ))}\n    </ContactListStyled>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 8px;\n  margin-top: 21px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { FilterForm } from './Filter.styled';\nimport { setFilter } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <FilterForm>\n      <label>Find contacts by name:</label>\n      <input\n        type=\"text\"\n        name=\"find\"\n        onChange={event => dispatch(setFilter(event.target.value))}\n      />\n    </FilterForm>\n  );\n};\n","import { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Section } from 'components/Section/Section';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\n\nconst Contacts = () => {\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Section title=\"Contacts\">\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      {contacts ? <ContactList /> : <p>No contacts</p>}\n    </Section>\n  );\n};\n\nexport default Contacts;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n"],"names":["SectionWrapper","styled","_templateObject","_taggedTemplateLiteral","SectionTitle","_templateObject2","Section","_ref","title","children","_jsxs","_jsx","ContactListStyled","ListItem","Button","_templateObject3","ContactList","dispatch","useDispatch","filteredContacts","useSelector","selectFilteredContacts","map","id","name","number","type","onClick","deleteContact","handleDelete","FilterForm","Filter","onChange","event","setFilter","target","value","contacts","selectContacts","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","state","items","createSelector","filter","contact","toLowerCase","includes"],"sourceRoot":""}